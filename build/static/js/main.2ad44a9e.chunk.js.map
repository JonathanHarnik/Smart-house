{"version":3,"sources":["Images/SH_background.jpg","Images/Smart-Home-addRoom.jpg","Images/room.jpg","Components/HomePage.js","Components/AddRooms.js","Components/ListOfRooms.js","Components/AddProduct.js","Components/Products.js","Components/Room.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","props","state","id","to","onClick","setFlag","Component","AddRooms","setType","e","setState","type","target","value","setName","name","setColor","color","onChange","this","disabled","selected","placeholder","className","maxLength","addRoom","ListOfRooms","rooms","map","item","style","display","marginLeft","goToRoom","backgroundColor","AddProduct","setStereo","counter","setBoiler","roomType","addProdBtn","Products","flag","listOfProd","index","Room","setFlagTrue","show","roomProd","product","length","alert","products","setProd","showProd","App","chosenRoomName","chosenRoomType","chosenRoomProd","setFlagFalse","backgroundImage","roomImage","addRoomImage","homeImage","showListOfRooms","t","n","c","i","tempProd","push","tempRoom","temp2","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ad44a9e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SH_background.92cb6c56.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Smart-Home-addRoom.bd47fdb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/room.44b3c7e1.jpg\";","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\nexport default class HomePage extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n           \n        }\n    }\n    // This component only shows the + button to add a room, but is technically the Home Page\n\n    render() {\n        return (\n            <div id=\"homeBody\">\n                <div id=\"homeDiv\">\n                    <div id=\"homeBtnDiv\">\n                        <Link to='/addroom'><button onClick={()=>{this.props.setFlag()}} id=\"homeBtn\">+</button></Link>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\nexport default class AddRooms extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            type:'',\n            name:'',\n            color:'',\n        }\n    }\n    \n    setType=(e)=>{\n        this.setState({type:e.target.value});\n    }\n\n    setName=(e)=>{\n        this.setState({name:e.target.value});\n    }\n    setColor=(e)=>{\n        this.setState({color:e.target.value});\n    }\n    \n    render() {\n        \n        return (\n            <div id=\"addRoomBody\">\n                <div id=\"addRoomsDiv\">\n                    <h2 id=\"addRoomHeader\">Add Room</h2>\n                    <select onChange={this.setType} id=\"roomSelect\">\n                        <option value=\"\" disabled selected>select room</option>\n                        <option value=\"Bedroom\">Bedroom</option>\n                        <option value=\"Bathroom\">Bathroom</option>\n                        <option value=\"Kitchen\">Kitchen</option>\n                    </select>\n\n                    <br/>\n                    <input onChange={this.setName} placeholder=\"Room name\" className=\"input\" maxLength='5'></input>\n                    <br/>\n                    <br/>\n                    <input onChange={this.setColor} placeholder=\"Room color\" className=\"input\"></input>\n                    <br/>\n                    <Link to='/'><button onClick={()=>{this.props.addRoom(this.state.type, this.state.name, this.state.color)}} id=\"addRoomBtn\">Add Room</button></Link>\n                    \n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\n\nexport default class ListOfRooms extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n        }\n    }\n\n\n\n\n    \n    render() { \n        return (\n            <div id=\"listOfRoomsDiv\">\n                {this.props.rooms.map((item)=>{return <div style={{display:\"inline-block\", marginLeft:\"10px\"}}><Link to='/room'><button onClick={()=>{this.props.goToRoom(item)}} className=\"roomList\" style={{backgroundColor:item.color}}><div id=\"roomNameBg\">{item.name}</div></button></Link></div>})}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class AddProduct extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            type:'',\n            counter:0\n        }\n    }\n    \n    setType=(e)=>{\n        this.setState({type:e.target.value});\n    }\n\n    setStereo=()=>{\n        if(this.props.counter==0){\n            return <option value=\"Stereo\">Stereo</option>\n        }\n    }\n    setBoiler=()=>{\n        if(this.props.roomType==\"Bathroom\"){\n            return <option value=\"Boiler\">Boiler</option>\n        }\n    }\n    \n    render() {\n        return (\n            <div id=\"addProdDiv\">\n                <select onChange={this.setType} id=\"prodSelect\">\n                    <option value=\"\" disabled selected>Select product</option>\n                    <option value=\"Air Condition\">Air Condition</option>\n                    <option value=\"Lamp\">Lamp</option>\n                    {this.setStereo()}\n                    {this.setBoiler()}\n                </select>\n                {/* the button sends the type of product chosen to addProdBtn in rooms */}\n                <button onClick={()=>{this.props.addProdBtn(this.state.type)}} id=\"addProdBtn\">Add</button>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Products extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n\n        }\n    }\n\n    color=(item)=>{\n        if(item.flag==true){\n            return \"green\" \n        }\n        else{\n            return \"red\"\n        }\n    }\n\n\n    \n    render() {\n        return (\n            <div id=\"prodDiv\">\n                <div id=\"listOfProd\">\n                    {this.props.listOfProd.map((item, index)=>{if(item.name==''){return <div></div>}else{return <button onClick={()=>{this.props.setColor(item, index)}} style={{backgroundColor:this.color(item)}} className=\"products\">{item.name}</button>}})}\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\nimport AddProduct from './AddProduct.js';\nimport Products from './Products.js';\n\n\nexport default class Room extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            flag: false,\n            products:[],\n        }\n    }\n\n\n    setFlagTrue=()=>{\n        // flag sets if or not to see the addProduct component\n        this.setState({flag:true})\n    }\n\n    show=()=>{\n        if(this.state.flag==false){\n            // returning an empty div to have the same space weather or not we see the addProduct component - so buttons wont move up and down\n            return <div id=\"emptyAddProdDiv\"></div>\n        }\n        else if(this.state.flag==true){\n            return <div><AddProduct addProdBtn={this.addProdBtn} roomProd={this.props.roomProd} roomType={this.props.type} counter={this.props.counter}/></div>\n        }\n    }\n\n    addProdBtn=(product)=>{\n        // why length>4 works? but >5 lets you choose 6 products?\n        if(this.props.roomProd.length>4){\n            alert (\"You reached maximum number of products for this room\")\n        }\n        else{\n        // gets the type of product selected\n        // Sets the this.state.products[] - adds the chosen products to be maped in Products.js\n        this.setState({products:[... this.state.products, product]})\n        // setting flag to false removes the Add Product component\n        this.setState({flag:false})\n        // setting the products in app.js within the apropriate this.state.rooms object - sends the selected product+room name to match\n        this.props.setProd(product, this.props.name)\n        }\n    }\n    showProd=()=>{\n        // asking for the chosen room's products from App.js to send to Products component\n      return this.props.roomProd\n    }\n    \n    \n    render() {\n        return (\n            <div>\n                <div id=\"roomBody\">\n                    <div id=\"roomInfo\">\n                        <p>Room name: {this.props.name}</p>\n                        <p>Room type: {this.props.type}</p>\n                        \n                    </div>\n                    <div id=\"addProdDiv\">\n                    {/* this.show selects according to flag if to show the AddProduct component or not */}\n                    {this.show()}\n                    </div>\n            \n                    <div id=\"roomBtnsDiv\">\n                        <button onClick={this.setFlagTrue} className=\"roomBtns\">Add Product</button>\n                        <Link to='/' onClick={this.props.setFlag}><button className=\"roomBtns\">Home</button></Link>\n                    </div>\n                </div>\n                <div><Products listOfProd={this.props.roomProd} setColor={this.props.setColor}/></div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './App.css';\nimport {BrowserRouter as Router,Switch, Route, Link} from 'react-router-dom';\nimport HomePage from './Components/HomePage.js';\nimport AddRooms from './Components/AddRooms.js';\nimport ListOfRooms from './Components/ListOfRooms.js';\nimport Room from './Components/Room.js';\nimport homeImage from './Images/SH_background.jpg';\nimport addRoomImage from './Images/Smart-Home-addRoom.jpg'\nimport roomImage from './Images/room.jpg';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      backgroundImage:`url(${homeImage})`,\n      // room is made out of [{type, name, color, products[{name, flag}]}]\n      rooms:[],\n      chosenRoomName:'',\n      chosenRoomType:'',\n      chosenRoomProd:[],\n      // counter is to count if there is a stereo in the room's product\n      counter:0,\n      flag:false\n    }\n  }\n  \n  goToRoom=(item)=>{\n    //  item=room object. Setting the room's name, type, products and counter to be shown in state\n    this.setState({chosenRoomName:item.name})\n    this.setState({chosenRoomType:item.type})\n    // also setting (again) the chosenRoomProd so if we re-enter a room we'll see it's products\n    this.setState({chosenRoomProd:item.products})\n    // setting counter to 1 if there is a stereo in the room so to not include it in the room's products\n    item.products.map((item)=>{if(item.name==\"Stereo\"){this.setState({counter:1})}})\n    this.setFlagFalse()\n    // changing the background image to Room image\n    this.setState({backgroundImage:`url(${roomImage})`})\n  }\n\n  setFlagFalse=()=>{\n    this.setState({flag:false})\n    this.setState({backgroundImage:`url(${addRoomImage})`})\n  }\n  setFlagTrue=()=>{\n    this.setState({flag:true})\n    // resetting counter to 0 when showing \"list of rooms\" in case we enter a room without a stereo from here\n    this.setState({counter:0})\n    this.setState({backgroundImage:`url(${homeImage})`})\n  }\n\n  showListOfRooms=()=>{\n    // flag determinds weather or not to show the \"list of rooms\" component\n    if(this.state.flag==true){\n      return <div><ListOfRooms rooms={this.state.rooms} goToRoom={this.goToRoom}/></div>\n    }\n  }\n\n  addRoom=(t, n, c)=>{\n    // getting type, name and color from \"add rooms\" to set rooms[] in state\n    this.setState({backgroundImage:`url(${homeImage})`})\n    // If type or name are empty (no selecteion was made), show error\n    if(t==\"\" || n==\"\"){\n      alert (\"Error\")\n      this.setFlagTrue()\n    }\n    else{\n      // setting room[] and returning flag to true to show \"list of rooms\" \n      this.setState({rooms:[...this.state.rooms, {type:t, name:n, color:c, products:[]}]})\n      this.setFlagTrue()\n    }\n  }\n\n  setProd=(product, name)=>{\n    // recieves selected product and room name to create a new rooms[] with the products chosen\n    this.state.rooms.map((item, i)=>{\n      if(item.name==name){\n        // adding the new product to the products[] of the room\n        let tempProd=item.products;\n        tempProd.push({name:product, flag:false});\n        // resetting the rooms[] with the updates room and its' products\n        let tempRoom=item;\n        tempRoom.products=tempProd;\n        let temp2=this.state.rooms;\n        temp2[i]=tempRoom;\n\n        this.setState({rooms:temp2})\n        this.setState({chosenRoomProd:tempProd})\n\n        // if product is stereo, we change counter so it wont give stereo as an option again at this point\n        if(product==\"Stereo\"){\n          this.setState({counter:1})\n        }\n      }\n    })\n  }\n\n  roomProd=()=>{\n    // mapping throughout rooms[] to transfer the list of prod of the chosen room to \"products\" to show all the room's products\n    this.state.rooms.map((item)=>{\n      if(item.name==this.state.chosenRoomName){\n        this.setState({chosenRoomProd:item.products})\n      }\n    })\n    return this.state.chosenRoomProd\n  }\n  \n  setColor=(product, index)=>{\n    // changing the product's flag to determind it's on/off mode. \n    this.state.rooms.map((item, i)=>{\n      if(item.name==this.state.chosenRoomName){\n        // changing the flag within the chosen product \n        let tempProd=item.products;\n        tempProd[index].flag=!tempProd[index].flag;\n      \n        //  resetting the rooms[] with the new flag in the chosen product\n        let tempRoom=item;\n        tempRoom.products=tempProd;\n        let temp2=this.state.rooms;\n        temp2[i]=tempRoom;\n\n        this.setState({rooms:temp2})\n        this.setState({chosenRoomProd:tempProd})\n      }\n    })\n  } \n\n\n  \n  \n  render() {\n    return (\n      <div id=\"body\" style={{backgroundImage:this.state.backgroundImage}}>\n        <div id=\"mainHeaderDiv\">\n          <h1 id=\"mainHeader\">Smart House</h1>\n        </div>\n        \n        <Router>\n        {this.showListOfRooms()}\n          <Switch>\n            <Route exact path='/' component={()=>{return <HomePage setFlag={this.setFlagFalse}/>}}/>\n            <Route exact path='/addroom' component={()=>{return <AddRooms addRoom={this.addRoom}/>}}/>\n            <Route exact path='/room' component={()=>{return <Room name={this.state.chosenRoomName} type={this.state.chosenRoomType} setFlag={this.setFlagTrue} setProd={this.setProd} \n            roomProd={this.state.chosenRoomProd} counter={this.state.counter} setColor={this.setColor}/>}}/>\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}